{"version":3,"sources":["components/Header.tsx","components/Ingridient.tsx","components/Recipe.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","text","changeText","changeSearch","className","href","src","process","alt","onSubmit","type","value","onChange","Ingridient","weight","image","Recipe","name","ingredients","map","ingridient","Math","floor","random","App","useState","setText","search","setSearch","recipes","setRecipes","recipe_call","query","a","fetch","result","json","resultjson","console","log","hits","useEffect","e","target","preventDefault","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPA4CeA,EApCuB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACzD,OACE,sBAAKC,UAAU,iDAAf,UACE,sBAAKA,UAAU,OAAf,UACE,mBAAGC,KAAK,+CAAR,SACE,qBACED,UAAU,eACVE,IAAG,UAAKC,cAAL,2BACHC,IAAI,sBAGR,uBAAOJ,UAAU,OAAjB,2BAEF,uBAAMK,SAAUN,EAAhB,UACE,uBACEC,UAAU,yCACVM,KAAK,OACLC,MAAOV,EACPW,SAAUV,IAEZ,wBAAQE,UAAU,qBAAlB,uBAEF,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,OAAjB,uCACA,mBAAGC,KAAK,+CAAR,SACE,qBACED,UAAU,eACVE,IAAG,UAAKC,cAAL,6BACHC,IAAI,6BCvBDK,EAJ+B,SAAC,GAA6B,IAA3BZ,EAA0B,EAA1BA,KAA0B,EAApBa,OAAoB,EAAZC,MAC7D,OAAO,mBAAGX,UAAU,cAAb,SAA4BH,KCoBtBe,EArBuB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAaH,EAAY,EAAZA,MAC1D,OACE,sBAAKX,UAAU,iEAAf,UACE,qBACEA,UAAU,iCACVE,IAAKS,EACLP,IAAI,oBAEN,oBAAIJ,UAAU,gCAAd,SAA+Ca,IAC/C,4BACGC,EAAYC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CACEnB,KAAMmB,EAAWnB,MACZoB,KAAKC,MAAsB,IAAhBD,KAAKE,oBCmClBC,EA/CiB,WAC9B,MAAwBC,mBAAS,IAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEAEVC,MAAM,uDAAD,OAAwDF,EAAxD,mBATFzB,WASE,oBAVDA,mCAUC,OAFK,cACZ4B,EADY,gBAIOA,EAAOC,OAJd,OAIZC,EAJY,OAKlBC,QAAQC,IAAIF,EAAWG,MACvBV,EAAWO,EAAWG,MANJ,2CAAH,sDA0BjB,OAPAC,qBAAU,WACO,KAAXd,GACFI,EAAYJ,KAGb,CAACA,IAGF,sBAAKvB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQH,KAAMA,EAAMC,WAnBL,SAACwC,GAClBhB,EAAQgB,EAAEC,OAAOhC,QAkB6BR,aAf3B,SAACuC,GACpBA,EAAEE,iBACFhB,EAAU3B,GACVyB,EAAQ,OAaN,qBAAKtB,UAAU,uCAAf,SACGyB,EAAQV,KAAI,SAAC0B,GAAD,OACX,cAAC,EAAD,CACE5B,KAAM4B,EAAOA,OAAOC,MACpB5B,YAAa2B,EAAOA,OAAO3B,YAC3BH,MAAO8B,EAAOA,OAAO9B,iBCnClBgC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4922e049.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface HeaderProps {\r\n  text: string;\r\n  changeText: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  changeSearch: (e: any) => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ text, changeText, changeSearch }) => {\r\n  return (\r\n    <div className=\"flex shadow-sm p-4 text-center justify-between\">\r\n      <div className=\"flex\">\r\n        <a href=\"https://github.com/LukaMarkicevic/recipe-app\">\r\n          <img\r\n            className=\"w-5 h-5 mt-1\"\r\n            src={`${process.env.PUBLIC_URL}/assets/logo/github.png`}\r\n            alt=\"PICTURE MISSING\"\r\n          />\r\n        </a>\r\n        <label className=\"ml-2\">recipe-app</label>\r\n      </div>\r\n      <form onSubmit={changeSearch}>\r\n        <input\r\n          className=\"outline-none filter drop-shadow-md h-6\"\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={changeText}\r\n        />\r\n        <button className=\"font-semibold ml-2\">SEARCH</button>\r\n      </form>\r\n      <div className=\"flex\">\r\n        <label className=\"mr-2\">Luka Markićević</label>\r\n        <a href=\"https://www.linkedin.com/in/lukamarkicevic1/\">\r\n          <img\r\n            className=\"w-5 h-5 mt-1\"\r\n            src={`${process.env.PUBLIC_URL}/assets/logo/linkedin.png`}\r\n            alt=\"PICTURE MISSING\"\r\n          />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\ninterface IngridientProps {\r\n  key: number;\r\n  text: string;\r\n  weight?: number;\r\n  image?: string;\r\n}\r\n\r\nconst Ingridient: React.FC<IngridientProps> = ({ text, weight, image }) => {\r\n  return <p className=\"font-normal\">{text}</p>;\r\n};\r\n\r\nexport default Ingridient;\r\n","import React from \"react\";\r\nimport Ingridient from \"./Ingridient\";\r\n\r\ninterface RecipeProps {\r\n  name: string;\r\n  ingredients: [];\r\n  image: string;\r\n}\r\n\r\nconst Recipe: React.FC<RecipeProps> = ({ name, ingredients, image }) => {\r\n  return (\r\n    <div className=\"filter drop-shadow-md md:drop-shadow-xl bg-white p-7 m-10 w-96\">\r\n      <img\r\n        className=\"mx-auto object-cover h-50 w-50\"\r\n        src={image}\r\n        alt=\"PICTURE MISSING\"\r\n      />\r\n      <h1 className=\"text-lg font-bold text-center\">{name}</h1>\r\n      <p>\r\n        {ingredients.map((ingridient: any) => (\r\n          <Ingridient\r\n            text={ingridient.text}\r\n            key={Math.floor(Math.random() * 100000)}\r\n          />\r\n        ))}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Recipe from \"./components/Recipe\";\n\ninterface AppProps {}\n\nconst api_key = process.env.REACT_APP_API_KEY;\nconst api_id = process.env.REACT_APP_API_ID;\n\nconst App: React.FC<AppProps> = () => {\n  const [text, setText] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n\n  const recipe_call = async (query: string) => {\n    const result =\n      await fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${api_id}&app_key=${api_key}\n`);\n    const resultjson = await result.json();\n    console.log(resultjson.hits);\n    setRecipes(resultjson.hits);\n  };\n\n  const changeText = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  };\n\n  const changeSearch = (e: any) => {\n    e.preventDefault();\n    setSearch(text);\n    setText(\"\");\n  };\n\n  useEffect(() => {\n    if (search !== \"\") {\n      recipe_call(search);\n    }\n    // console.log(recipe_call(search));\n  }, [search]);\n\n  return (\n    <div className=\"App\">\n      <Header text={text} changeText={changeText} changeSearch={changeSearch} />\n      <div className=\"inline-flex justify-evenly flex-wrap\">\n        {recipes.map((recipe: any) => (\n          <Recipe\n            name={recipe.recipe.label}\n            ingredients={recipe.recipe.ingredients}\n            image={recipe.recipe.image}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}